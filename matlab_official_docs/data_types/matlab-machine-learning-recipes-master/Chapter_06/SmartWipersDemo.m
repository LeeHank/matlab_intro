%% Demonstrates a Fuzzy Logic Control System for windshield wipers.
% This demonstrates a fuzzy logic control system
%
%% See also
% BuildFuzzySystem, FuzzyPlot, FuzzyInference

%% Initialize
% Create the system
SmartWipers = BuildFuzzySystem(...
              'id',1,...
              'input comp',{'Dry'  'Drizzle'  'Wet'} ,...
              'input type', {'Trapezoid'  'Triangle'  'Trapezoid'} ,...
              'input params',{[0 0 10 50]  [40 50]  [50 90 101 101]},...
              'input range',[0 100],...
              'input name','Wetness',...
              'id',2,...
              'input comp',{'Light'  'Medium'  'Heavy'},...
              'input type',{'Triangle'  'Triangle'  'Trapezoid'},...
              'input params',{[100 0]  [100 100]  [100 200 251 251]},...
              'input name','Intensity',...
              'input range',[0 250],...
              'id',1,...
              'output comp',{'Stop'  'Slow'  'Fast'},...
              'output type',{'Trapezoid'  'Trapezoid'  'Trapezoid'},...
              'output params',{[0 0 4 1]  [3 4.5000 6.5 10.000]  [9 9.5000 10.1000 10.1000]},...
              'output name','Speed',...
              'output range',[0 10],...
              'id',2,...
              'output comp',{'Zero'  'Short'  'Long'},...
              'output type',{'Triangle'  'Trapezoid'  'Trapezoid'},...
              'output params',{[6 0]  [0 6 12 18]  [12 18 20.1000 20.1000]},...
              'output range',[0 20],...
              'id',1,...
              'rule input',[1 1],...
              'rule output',[1 3],...
              'rule operator','FuzzyAND',...
              'id',2,...
              'rule input',[1 2],...
              'rule output',[2 3],...
              'rule operator','FuzzyAND',...
              'id',3,...
              'rule input',[1 3],...
              'rule output',[2 2],...
              'rule operator','FuzzyAND',...
              'id',4,...
              'rule input',[2 1],...
              'rule output',[2 3],...
              'rule operator','FuzzyAND',...
              'id',5,...
              'rule input',[2 2],...
              'rule output',[2 2],...
              'rule operator','FuzzyAND',...
              'id',6,...
              'rule input',[2 3],...
              'rule output',[2 1],...
              'rule operator','FuzzyAND',...
              'id',7,...
              'rule input',[3 1],...
              'rule output',[2 2],...
              'rule operator','FuzzyAND',...
              'id',8,...
              'rule input',[3 3],...
              'rule output',[3 1],...
              'rule operator','FuzzyAND',...
              'id',9,...
              'rule input',[1 1],...
              'rule output',[1 3],...
              'rule operator','FuzzyAND',...
              'implicate','Clip',...
              'aggregate','max',...
              'defuzzify','Centroid',...
              'data',[100 100]);
   
% Plot the fuzzy variables
NewFigure('Input 1');
FuzzyPlot( SmartWipers.input(1) );
NewFigure('Input 2');
FuzzyPlot( SmartWipers.input(2) );
NewFigure('Output 1');
FuzzyPlot( SmartWipers.output(1) );
NewFigure('Output 2');
FuzzyPlot( SmartWipers.output(2) );


n = 30; % Number of samples

% Generate regularly space arrays in the 2 inputs
x = linspace(SmartWipers.input(1).range(1),SmartWipers.input(1).range(2),n);
y = linspace(SmartWipers.input(2).range(1),SmartWipers.input(2).range(2),n);

PlotSet(1:n,[x;y],'x label','Input','y label',{'Wetness','Intensity'},...
        'figure title','Inputs','Plot Title',{'Wetness','Intensity'})

h = waitbar(0,'Smart Wipers Demo: plotting the rule base');
z1 = zeros(n,n);
z2 = zeros(n,n);
for k = 1:n
  for j = 1:n  
    temp = FuzzyInference([x(k),y(j)], SmartWipers);
    z1(k,j) = temp(1);
    z2(k,j) = temp(2);
  end
  waitbar(k/n)
end
close(h);

NewFigure('Wiper Speed from Fuzzy Logic')
surf(x,y,z1)
xlabel('Raindrop Wetness')
ylabel('Droplet Frequency')
zlabel('Wiper Speed')
colorbar

NewFigure('Wiper Interval from Fuzzy Logic')
surf(x,y,z2)
xlabel('Raindrop Wetness')
ylabel('Droplet Frequency')
zlabel('Wiper Interval')
view([142.5 30])
colorbar
